services:
  node:
    user: node
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
    - ..:/awesome-database-backup:delegated
    tty: true
    environment:
      TZ: Asia/Tokyo
    networks:
      default:
      test:
        ipv4_address: 172.16.2.5
    dns:
    - 172.16.2.2 # dnsmasq container
    working_dir: /awesome-database-backup

  mongo:
    # You must set compatible version with newest version of mongotool in .github/workflows/container-publish.yaml
    # ex. Set "6" if the following
    # - db_type: mongodb
    #   db_tool_version: 100.5.2
    # - db_type: mongodb
    #   db_tool_version: 100.5.3
    image: mongo:8
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_ADMIN_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_ADMIN_PASSWORD:-password}
    volumes:
    - /data/db
    healthcheck:
      test:
      - CMD
      - mongo
      - mongodb://localhost:27017/?authSource=admin
      - --quiet
      - --eval
      - db.runCommand("ping").ok
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    # You must set newest version of .github/workflows/container-publish.yaml
    # ex. Set "12" if the following
    # - db_type: postgresql
    #   db_tool_version: 11
    # - db_type: postgresql
    #   db_tool_version: 12
    image: postgres:17-bullseye
    environment:
      POSTGRES_DB: ${DB_NAME:-test}
      POSTGRES_PASSWORD: ${DB_ADMIN_PASSWORD:-password}
    volumes:
    - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  mariadb:
    # You must set newest version of .github/workflows/container-publish.yaml
    # ex. Set "10.6.21" if the following
    # - db_type: mariadb
    #   db_tool_version: 10.5.28
    # - db_type: mariadb
    #   db_tool_version: 10.6.21
    image: mariadb:11.7.2
    environment:
      MARIADB_USER: ${DB_ADMIN_USERNAME:-root}
      MARIADB_ROOT_PASSWORD: ${DB_ADMIN_PASSWORD:-password}
    volumes:
    - mysql_data:/var/lib/mysql
    healthcheck:
      test:
      - CMD
      - mariadb-admin
      - ping
      - -h
      - localhost
      - -p${DB_ADMIN_PASSWORD:-password}

  # S3 Mock for test
  minio:
    image: minio/minio:RELEASE.2025-02-07T23-21-09Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      # Use virtual hosting buckets. see: https://docs.min.io/docs/minio-federation-quickstart-guide.html
      MINIO_DOMAIN: s3.minio
    volumes:
    - minio_data:/data
    - minio_config:/root/.minio
    command:
    - server
    - /data
    networks:
      test:
        ipv4_address: 172.16.2.4

  # GCS Mock for test
  fake-gcs-server:
    image: fsouza/fake-gcs-server:1.52.1
    volumes:
    - fake-gcs-server:/data
    command:
    - --scheme
    - http
    - --public-host
    - fake-gcs-server
    # Must be set up with apiEndpoint
    # see. https://github.com/fsouza/fake-gcs-server/blob/93a13ba5c1ce7896f8129f190ca3324d4cba7990/examples/node/README.md
    - --external-url
    - http://fake-gcs-server/4443
    networks:
      test:
        ipv4_address: 172.16.2.3

  # DNS masquerade
  #
  # WHY:
  #   S3 API v2 supports only virtual host format.
  #   Access to "bucket-name" is assigned to "bucket-name.s3.s3rver",
  #     but docker-compose "aliases" does not support wildcard, so dnsmasq is used.
  #   This means that all name resolution results for "*.s3rver" will be the IP address of the "s3rver" container.
  #
  # ref. https://github.com/docker/compose/issues/7493#issuecomment-922513766
  dnsmasq:
    image: strm/dnsmasq
    volumes:
    - ./dnsmasq.conf:/etc/dnsmasq.conf:delegated
    cap_add:
    - NET_ADMIN
    # dnsmasq container config above is taken verbatim from https://hub.docker.com/r/strm/dnsmasq
    networks:
      test:
        ipv4_address: 172.16.2.2 # Static IP here makes it possible to point other containers' dns here.

volumes:
  mongo_data:
  postgres_data:
  mysql_data:
  minio_data:
  minio_config:
  fake-gcs-server:

networks:
  test:
    ipam:
      config:
      - subnet: 172.16.2.0/24
