name: Application - Benchmark

on:
  push:

jobs:
  benchmark:
    permissions:
      actions: read
      pull-requests: write
    runs-on: ubuntu-22.04
    services:
      fake-gcs-server:
        image: fsouza/fake-gcs-server:1.52.1
        ports:
        - 4443:4443
        options: >-
          --health-cmd "wget -q -S -O - --no-check-certificate https://localhost:4443/_internal/healthcheck"
    steps:
    - name: Collect Workflow Telemetry
      uses: ryu-sato/workflow-telemetry-action@refs/heads/fix/enable-to-filter-github-action-runner
      with:
        metric_frequency: 5          # Collection interval (seconds)
        proc_trace_min_duration: 0   # Trace all processes
        comment_on_pr: false         # Output results in PR comments
        job_summary: true            # Output results to Job Summary

    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version-file: package.json
        cache: "yarn"
    # - name: Configure fake-gcs-server
    #   uses: docker://node:lts-slim
    #   with:
    #     args: >-
    #       node -e "
    #       fetch('https://fake-gcs-server:4443/_internal/config',{
    #         method:'PUT',
    #         headers:{'Content-Type':'application/json'},
    #         body:JSON.stringify({
    #           publicHost:'fake-gcs-server',
    #           externalUrl:'https://fake-gcs-server:4443'
    #         })
    #       })
    #       .then(r=>console.log(r.text()))
    #       .catch(console.error)"
    #   env:
    #     NODE_TLS_REJECT_UNAUTHORIZED: 0
    # - name: Configure fake-gcs-server
    #   run: >-
    #     node -e "
    #     fetch('https://localhost:4443/_internal/config',{
    #       method:'PUT',
    #       headers:{'Content-Type':'application/json'},
    #       body:JSON.stringify({
    #         publicHost:'localhost',
    #         externalUrl:'https://localhost:4443'
    #       })
    #     })
    #     .then(r=>console.log(r.text()))
    #     .catch(console.error)"
    #   env:
    #     NODE_TLS_REJECT_UNAUTHORIZED: 0
    # - name: Run performance test
    #   uses: docker://node:lts-slim
    #   with:
    #     entrypoint: bash
    #     args: >-
    #       -c "
    #       yarn install;
    #       yarn run test:performance;
    #       "
    #   env:
    #     GCP_ENDPOINT_URL: https://fake-gcs-server:4443
    #     NODE_TLS_REJECT_UNAUTHORIZED: 0
    - run: yarn install
    - name: Run performance test
      run: yarn run test:performance
      env:
        GCP_ENDPOINT_URL: https://localhost:4443
        NODE_TLS_REJECT_UNAUTHORIZED: 0
