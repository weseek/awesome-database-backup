# Publish a container image which built app of the target branch to Docker hub
name: Container - Publish to Docker hub

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      toolPatterns: ${{ steps.set-tool-version-patterns.outputs.toolPatterns }}
    steps:
    - uses: actions/checkout@v5
    - uses: ./.github/actions/set-tool-version-patterns
      id: set-tool-version-patterns

  container-publish:
    needs: set-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        db_tool: ${{ fromJson(needs.set-matrix.outputs.toolPatterns) }}
      fail-fast: false
    steps:
    - uses: actions/checkout@v5
    - name: Set up metadata
      id: pkg-meta
      run: |
        echo "package_filter=@awesome-database-backup/awesome-${{ matrix.db_tool.db_type }}-backup" >> $GITHUB_OUTPUT
        echo "package_path=apps/awesome-${{ matrix.db_tool.db_type }}-backup" >> $GITHUB_OUTPUT
    - uses: ./.github/actions/set-docker-tags-of-app
      id: docker-meta
      with:
        db-type: ${{ matrix.db_tool.db_type }}
        db-tool-version: ${{ matrix.db_tool.version }}
        is-latest-tag: true
    - uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
    - uses: docker/setup-buildx-action@v3
    - name: Build and push container
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./docker/Dockerfile
        platforms: linux/amd64
        push: true
        build-args: |
          packageFilter=${{ steps.pkg-meta.outputs.package_filter }}
          packagePath=${{ steps.pkg-meta.outputs.package_path }}
          dbType=${{ matrix.db_tool.db_type }}
          dbToolVersion=${{ matrix.db_tool.version }}
        tags: ${{ steps.docker-meta.outputs.tags }}

    - name: Update Docker hub's description
      uses: peter-evans/dockerhub-description@v4.0.2
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
        DOCKERHUB_REPOSITORY: ${{ steps.docker-meta.outputs.image }}
        README_FILEPATH: ${{ steps.pkg-meta.outputs.package_path }}/README.md

  container-publish-slack-notification:
    needs: container-publish
    runs-on: ubuntu-latest
    steps:
    - name: Slack Notification
      uses: weseek/ghaction-release-slack-notification@master
      with:
        channel: '#srv'
        url: ${{ secrets.SLACK_WEBHOOK_URL }}
        created_tag: ${{ github.ref_name }}
