name: Container - Test

on:
  push:
    branches-ignore: [stable]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      toolPatterns: ${{ steps.set-matrix.outputs.value }}
    steps:
    - uses: ./actions/set-tool-version-patterns
      id: set-matrix

  container-test:
    needs: set-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        db_tool: ${{ fromJson(needs.set-matrix.outputs.toolPatterns) }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up metadata
      id: pkg_meta
      run: |
        echo "package_filter=@awesome-database-backup/awesome-${{ matrix.db_tool.db_type }}-backup" >> $GITHUB_OUTPUT
        echo "package_path=apps/awesome-${{ matrix.db_tool.db_type }}-backup" >> $GITHUB_OUTPUT
        echo "package_image_name=weseek/awesome-${{ matrix.db_tool.db_type }}-backup" >> $GITHUB_OUTPUT
    # The "docker-container" driver is used
    - uses: docker/setup-buildx-action@v3
    - name: Build container (No push)
      uses: docker/build-push-action@v6
      with:
        file: ./docker/Dockerfile
        build-args: |
          packageFilter=${{ steps.pkg_meta.outputs.package_filter }}
          packagePath=${{ steps.pkg_meta.outputs.package_path }}
          dbType=${{ matrix.db_tool.db_type }}
          dbToolVersion=${{ matrix.db_tool.version }}
        tags: ${{ steps.pkg_meta.outputs.package_image_name }}:latest
        load: true # Save build result localy because of using cache by next steps
    - name: Run structure tests
      uses: brpaz/structure-tests-action@1.4.0
      with:
        image: ${{ steps.pkg_meta.outputs.package_image_name }}:latest
        configFile: ./docker/test/${{ matrix.db_tool.db_type }}/structure-tests.yml
      env:
        BACKUP_TOOL_VERSION: ${{ matrix.db_tool.version }}

  # In order to add a status check of the entire workflow as a condition in the ruleset, we define a job to be executed when the preceding job is successful.
  # This is so that if the version of the DB tool is updated in the future, the rule set conditions will not need to be changed.
  # You can only specify a job, and the job name is named by a combination of the matrix.
  # (ex. container-test / (mariadb, 10.11.11)
  check-all-tests:
    needs: container-test
    runs-on: ubuntu-latest
    name: Container - Test is passed successfully
    steps:
    - run: echo "All tests passed successfully!"
