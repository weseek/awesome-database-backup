name: Container - Publish

on:
  release:
    types: [published]

jobs:
  container-publish:
    runs-on: ubuntu-latest

    strategy:
      # Set same as container-test.yaml
      matrix:
        db_type:
        - mongodb
        - postgresql
        - mariadb
        - file
        include:
        # Valid versions can be found here https://www.mongodb.com/try/download/database-tools/releases/archive
        - db_type: mongodb
          db_tool_version: 100.5.2
          docker_tag_suffix: mongotool-100.5.2
        # Valid versions can be found here https://apt.postgresql.org/pub/repos/apt/dists/bullseye-pgdg/
        - db_type: postgresql
          db_tool_version: 11
          docker_tag_suffix: postgresql-11
        # Valid versions can be found here https://dlm.mariadb.com/rest/releases/mariadb_server/
        - db_type: mariadb
          db_tool_version: 10.5.28
          docker_tag_suffix: mariadb-10.5.28
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    - name: Set up metadata
      id: pkg_meta
      run: |
        echo "package_scope=@awesome-database-backup/awesome-${{ matrix.db_type }}-backup"
        echo "package_path=apps/awesome-${{ matrix.db_type }}-backup"
        echo "package_repository=weseek/awesome-${{ matrix.db_type }}-backup"
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to docker.io registry
      run:
        echo ${{ secrets. DOCKER_REGISTRY_PASSWORD }} |
          docker login --username ${{ secrets. DOCKER_REGISTRY_USERNAME }} --password-stdin
    - name: Retrieve information from package.json
      uses: myrotvorets/info-from-package-json-action@2.0.0
      id: package-json
    - name: Set up Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.pkg_meta.outputs.package_repository }}
        tags: |
          type=raw,value=latest
          type=semver,value=v${{ steps.package-json.outputs.packageVersion }},pattern={{major}}
          type=semver,value=v${{ steps.package-json.outputs.packageVersion }},pattern={{major}}.{{minor}}
          type=semver,value=v${{ steps.package-json.outputs.packageVersion }},pattern={{major}}.{{minor}}.{{patch}}
          type=semver,value=v${{ steps.package-json.outputs.packageVersion }}-${{ matrix.docker_tag_suffix }},pattern={{major}}.{{minor}}.{{patch}}
    - name: Build and push container
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile
        platforms: linux/amd64
        push: true
        build-args: |
          packageScope=${{ steps.pkg_meta.outputs.package_scope }}
          packagePath=${{ steps.pkg_meta.outputs.package_path }}
          dbType=${{ matrix.db_type }}
          dbToolVersion=${{ matrix.db_tool_version }}
        tags: ${{ steps.meta.outputs.tags }}

    - name: Update Docker hub's description
      uses: peter-evans/dockerhub-description@v4.0.0
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
        DOCKERHUB_REPOSITORY: ${{ steps.pkg_meta.outputs.package_repository }}
        README_FILEPATH: ${{ steps.pkg_meta.outputs.package_path }}/README.md

  container-publish-slack-notification:
    needs: container-publish

    runs-on: ubuntu-latest

    steps:
    - name: Slack Notification
      uses: weseek/ghaction-release-slack-notification@master
      with:
        channel: '#srv'
        url: ${{ secrets.SLACK_WEBHOOK_URL }}
        created_tag: ${{ github.ref_name }}
